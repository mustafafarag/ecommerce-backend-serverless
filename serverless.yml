service: ecommerce-api
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  environment:
    PORT: ${env:PORT}
    MONGODB_URL: ${env:MONGODB_URL}
    JWT_SECRET: ${env:JWT_SECRET}
    MAIL_ID: ${env:MAIL_ID}
    MP: ${env:MP}
    REDIS_URL: ${env:REDIS_URL}
    CLOUDINARY_CLOUD_NAME: ${env:CLOUDINARY_CLOUD_NAME}
    CLOUDINARY_API_KEY: ${env:CLOUDINARY_API_KEY}
    CLOUDINARY_API_SECRET: ${env:CLOUDINARY_API_SECRET}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:*
      Resource: "*"

functions:
  app:
    handler: handler.handler
    timeout: 30  # optional: increase timeout if needed
    memorySize: 512  # optional: optimize based on cold start behavior
    reservedConcurrency: 4      # hard cap on concurrent executions
#    provisionedConcurrency: 2    # pre-warm 2 instances (cold-start prevention) WARNING: This will incur additional costs
    events:
      - http:
          path: /{proxy+}
          method: any
          cors: true

plugins:
  - serverless-offline # For local development


custom:
  serverless-offline:
    httpPort: 8000  # Change this to any other port if needed

